import { TacticalBrief } from '@/types/tactical-brief';

export function exportBriefAsMarkdown(data: TacticalBrief): string {
  const timestamp = new Date().toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
    hour: '2-digit',
    minute: '2-digit',
  });

  return `# TACTICAL BRIEF

**Generated:** ${timestamp}

---

## PROPOSAL INFORMATION

**Title:** ${data.proposal.title}
**DAO:** ${data.proposal.dao}
**Deadline:** ${new Date(data.proposal.deadline).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  })}

---

## OPPORTUNITY SCORE

**Score:** ${data.opportunityScore.toFixed(1)} / 10

${
  data.opportunityScore >= 7
    ? '✅ **HIGH OPPORTUNITY** - Strong potential for success'
    : data.opportunityScore >= 4
    ? '⚠️ **MODERATE OPPORTUNITY** - Proceed with consideration'
    : '❌ **LOW OPPORTUNITY** - Significant challenges present'
}

---

## PSYCHOLOGY ANALYSIS

### Urgency Level: ${data.psychology.urgency}
${data.psychology.urgencyReason}

### Desperation: ${data.psychology.desperation}
${data.psychology.desperationReason}

### Flexibility: ${data.psychology.flexibility}
${data.psychology.flexibilityReason}

${
  data.psychology.triggers.length > 0
    ? `### Key Psychological Triggers
${data.psychology.triggers.map((trigger) => `- ${trigger}`).join('\n')}`
    : ''
}

### Full Analysis
${data.psychology.fullAnalysis}

---

## COMPETITIVE EDGE

**Skill Match:** ${data.edge.skillMatch}%
**Win Probability:** ${data.edge.winProbability}%

${
  data.edge.advantages.length > 0
    ? `### Your Advantages
${data.edge.advantages.map((adv) => `- ${adv}`).join('\n')}`
    : ''
}

${
  data.edge.gaps.length > 0
    ? `### Gaps to Address
${data.edge.gaps.map((gap) => `- ${gap}`).join('\n')}`
    : ''
}

---

## TACTICAL RECOMMENDATION

### Main Strategy
${data.recommendation.mainStrategy}

${
  data.recommendation.emphasize.length > 0
    ? `### Emphasize
${data.recommendation.emphasize.map((point, idx) => `${idx + 1}. ${point}`).join('\n')}`
    : ''
}

${
  data.recommendation.avoid.length > 0
    ? `### Avoid
${data.recommendation.avoid.map((point) => `- ${point}`).join('\n')}`
    : ''
}

### Suggested Opening Line
> "${data.recommendation.openingLine}"

---

*Generated by Void Tactical Intelligence System*
`;
}

export function exportBriefAsJSON(data: TacticalBrief): string {
  return JSON.stringify(
    {
      exportedAt: new Date().toISOString(),
      brief: data,
    },
    null,
    2
  );
}

export function downloadFile(content: string, filename: string, mimeType: string) {
  const blob = new Blob([content], { type: mimeType });
  const url = URL.createObjectURL(blob);
  const link = document.createElement('a');
  link.href = url;
  link.download = filename;
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
  URL.revokeObjectURL(url);
}

export function exportTacticalBrief(data: TacticalBrief, format: 'markdown' | 'json' = 'markdown') {
  const sanitizedTitle = data.proposal.title
    .toLowerCase()
    .replace(/[^a-z0-9]+/g, '-')
    .replace(/^-|-$/g, '');

  const timestamp = new Date().toISOString().split('T')[0];

  if (format === 'json') {
    const content = exportBriefAsJSON(data);
    const filename = `tactical-brief-${sanitizedTitle}-${timestamp}.json`;
    downloadFile(content, filename, 'application/json');
  } else {
    const content = exportBriefAsMarkdown(data);
    const filename = `tactical-brief-${sanitizedTitle}-${timestamp}.md`;
    downloadFile(content, filename, 'text/markdown');
  }
}
